environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "None"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "None"


    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"
      PYSMT_SOLVER: "z3"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "z3"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "32"
      PYSMT_SOLVER: "z3"

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "z3"


    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"
      PYSMT_SOLVER: "msat"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "msat"

    # There is a problem with python 3.5+ with the compilation of MathSAT on AppVeyor.
    # We need at least VS 2015 to build extensions, but it does not work on AppVeyor for some reason.
    # see https://wiki.python.org/moin/WindowsCompilers
    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "32"
      PYSMT_SOLVER: "msat"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"
      PYSMT_SOLVER: "msat"


install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: "./ci/appveyor/install.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - cmd: "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - cmd: "python --version"
  - cmd: "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  - cmd: "%CMD_IN_ENV% pip install -r dev-requirements.txt"

  # Install the solvers
  - cmd: "%CMD_IN_ENV% python install.py --confirm-agreement"

  # Set the pythonpath
  - cmd: "%CMD_IN_ENV% python install.py --env > bindings_path.bat"
  - cmd: "call ./bindings_path.bat"
  - ECHO "PythonPath=%PYTHONPATH%"
  - ECHO "Path=%PATH%"

build: false

test_script:
  - "%CMD_IN_ENV% python install.py --check"
  - "%CMD_IN_ENV% nosetests -v "

# after_test:
#    # If tests are successful, create a whl package for the project.
#    - "%CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst"
#    - ps: "ls dist"

# artifacts:
#   # Archive the generated wheel package in the ci.appveyor.com build report.
#   - path: dist\*
